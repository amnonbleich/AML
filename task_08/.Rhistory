cdf(4,3,0.4)
cdf<-function (k,n,pr)
{
if(k>=0)
{
prob<-sapply(seq(0,k,1),function(x){dbinom(x,n,pr)})
}
else
{
return(0)
}
}
cdf(4,3,0.4)
cdf<-function (k,n,pr)
{
if(k>=0)
{
prob<-sapply(seq(0,k,1),function(x){dbinom(x,n,pr)})
return(min(sum(prob),1))
}
else
{
return(0)
}
}
cdf(4,3,0.4)
cdf(30,250,0.06)
1-cdf(30,250,0.06)
pbinom(30,250,0.06)
1-pbinom(30,250,0.06)
1-pbinom(29,250,0.06)
1-pbinom(31,250,0.06)
1-pbinom(30,250,0.05)
1-dbinom(30,250,0.05)
dbinom(30,250,0.05)
pr= 600/10000
k=30
n=250
print(1-cdf(k,n,pr))
print(1-pbinom(k,n,pr))
dhyper(20,35,30,40)
p<-function(k,mt,n,m)
{return(choose(mt,k)*choose(m-mt,n-k)/choose(m,n))}
p(20,35,30,40)
?choose
p(k,mt,n,m)
m=30
mt=15
n=40
k=20
p(k,mt,n,m)
dhyper(20,30,40,35)
p<-function(k,mt,n,m)
{return(choose(mt,k)*choose(m-mt,n-k)/choose(m,n))}
m=40+30
mt=40
n=35
k=4
p(k,mt,n,m)
m=40+30
mt=40
n=35
k=20
p(k,mt,n,m)
dhyper(20,30,40,35)
p<-function(k,mt,n,m)
{return((choose(mt,k)*choose(m-mt,n-k))/choose(m,n))}
p(k,mt,n,m)
m=45#40+30
mt=20#40
n=10#35
k=4#20
p(k,mt,n,m)
dhyper(20,30,40,35)
m=40+30
mt=30
n=35
k=20
p(k,mt,n,m)
ch<- function(n,k)
{
return(factorial(n)/(factorial(k)*factorial(n-k)))
}
hypergeometric<-function(nt,mt,n,m)
{
parts<- sapply(nt:min(mt,n),function(k){ch(mt,k)*ch(m-mt,n-k)/ch(m,n)})
return (sum(parts))
}
hypergeometric(3,4,5,18)
dhyper(3,5,18,4)
?dhyper
dhyper(3,5,18,4,lower.tail=T)
dhyper(3,5,18,4,log)
dhyper(3,5,18,4,log=T)
dhyper(3,5,18,4,log=F)
cumsum(dhyper(3,5,18,4))
?cumsum
cumsum(2:ยง)
cumsum(2:3)
cumsum(dhyper(0:3,5,18,4))
1-cumsum(dhyper(0:3,5,18,4))
1-cumsum(dhyper(3:4,5,18,4))
cumsum(dhyper(3:4,5,18,4))
dhyper(3:4,5,18,4)
s<-function(k){ch(mt,k)*ch(m-mt,n-k)/ch(m,n)}
dhyper(3,5,13,4)
hypergeometric(3,4,5,18)
dhyper(3,5,13,4)+dhyper(4,5,13,4)
sum(dhyper(3:4,5,13,4))
contable= matrix(3,1,2,12,nrow=2)
contable= matrix(c(3,1,2,12),nrow=2,dimnames=list(c('study','not in study'),c('annotated to t', 'not anotated')))
contable
contable= matrix(c(1,2,3,12),nrow=2,dimnames=list(c('annotated to t', 'not anotated'),c('study','not in study')))
contable
contable= matrix(c(3,2,1,12),nrow=2,dimnames=list(c('annotated to t', 'not anotated'),c('study','not in study')))
contable= matrix(c(3,2,1,12),nrow=2,dimnames=list(c('annotated to t', 'not anotated'),c('study','not_study')))
contable
fisher.test(contable,alternative="g")
fisher.test(t(contable),alternative="g")
t(con())
t(contable
)
phyper(3 - 1,4,18-4,5,lower.tail=F)
a<-fisher.test(t(contable),alternative="g")
a
a$p.value
contable= matrix(c(3,2,1,12),nrow=2,dimnames=list(c('annotated to t', 'not anotated'),c('study','not_study')))
fisher.test(t(contable),alternative="g")
sum(dhyper(1:4,5,13,4))
sum(dhyper(0:4,5,13,4))
sum(dhyper(0:3,5,13,4))
contable= matrix(c(3,2,1,12),nrow=2,dimnames=list(c('annotated to t', 'not anotated'),c('study','not_study')))
fisher.test(t(contable),alternative="g")
contable= matrix(c(3,2,1,12),nrow=2,dimnames=list(c('annotated to t', 'not anotated'),c('study','not_study')))
fisher.test(t(contable),alternative="g")$pValue
contable= matrix(c(3,2,1,12),nrow=2,dimnames=list(c('annotated to t', 'not anotated'),c('study','not_study')))
fisher.test(t(contable),alternative="g")$pbalue
contable= matrix(c(3,2,1,12),nrow=2,dimnames=list(c('annotated to t', 'not anotated'),c('study','not_study')))
fisher.test(t(contable),alternative="g")$pvalue
phyper(3 - 1,4,18-4,5,lower.tail=F)
a=fisher.test(t(contable),alternative="g")
a$p.value
library(Biobase)
source("https://bioconductor.org/biocLite.R")
biocLite("limma")
source("https://bioconductor.org/biocLite.R")
biocLite("GEOquery")
library(seqinr)
reads<-read.fasta(file = 'fna-files/fna-files/3.TCA.454Reads.fna',as.string=TRUE)
read_Cat<- sapply(reads,function(x){if(substr(x[1],1,10)=='acgagtgcgt'){return (1)} else if(substr(x[1],1,10)=='aggctcgaca'){return (2)}else {return (3)}})
clone_mix_reads_raw <- reads[read_Cat==1]
clone_mix_reads_seq <- sapply(clone_mix_reads_raw,function(x){substring(x[1],11)})
references<- read.fasta('./clonal_sequences.fasta',as.string=T)
referencestrings <-sapply(references,function(x){x[1]})
occ<-matrix(nrow=length(clone_mix_reads_seq),ncol=length(referencestrings),dimnames=(list(read=names(clone_mix_reads_seq),reference=names(referencestrings))))
for (i in 1:10)
{
print(i)
occ[,i]<-sapply(clone_mix_reads_seq,function(read){grepl(read,referencestrings[i])})
}
?count
a|b<-2
a=c(1,2,3)
b=c(T,F,T)
a*b
class(occ)
a(1,2,3)
a=C(1,2,3)
a=c(1,2,3)
b=marix(c(1,0,0,0,1,0,0,0,1),nrow=3)
b=matrix(c(1,0,0,0,1,0,0,0,1),nrow=3)
b
a*b
b=matrix(c(1,0,0,0,1,0,1,1,1),nrow=3)
a*b
t(a)*b
b*a
t(b)*a
a%*%b
matrix(a,ncol=1)*b
matrix(a,nrow=1)*b
class(b)
matrix(a,nrow=1)
Pr.R_r.cond.H_h2<-apply(occ,1,function(col){1/sum(col)})
Pr.R_r.cond.H_h_mat<-t(Pr.R_r.cond.H_h2*t(occ))
head(Pr.R_r.cond.H_h_mat)
Pr.R_r.cond.H_h2
Pr.R_r.cond.H_h2<-apply(occ,2,function(col){1/sum(col)})
Pr.R_r.cond.H_h2
Pr.R_r.cond.H_h2<-apply(occ,2,function(col){1/sum(col)})
Pr.R_r.cond.H_h_mat<-t(Pr.R_r.cond.H_h2*t(occ))
head(Pr.R_r.cond.H_h_mat)
as.logical(2,3,4)
as.logical(c(2,3,4))
as.logical(c(2,3,0))
occ_bool<-apply(occ,1,sum)
head(occ_bool)
sum(occ_bool)
occ_sub<-occ[occ_bool,]
occ_sub
which(c(1,0,3))
which(occ_bool)
occ_bool
as.logical(occ_bool)
sum(as.logical(occ_bool))
occ<-matrix(nrow=length(clone_mix_reads_seq),ncol=length(referencestrings),dimnames=(list(read=names(clone_mix_reads_seq),reference=names(referencestrings))))
dim(occ)
for (i in 1:10)
{
print(i)
occ[,i]<-sapply(clone_mix_reads_seq,function(read){grepl(read,referencestrings[i])})
}
occ_bool<-as.logical(apply(occ,1,sum))
occ_bool
lengthocc_bool
length(occ_bool)
sum(occ_bool)
occ_sub<-occ[occ_bool,]
occ_sub
View(occ_sub)
Pr.R_r.cond.H_h2<-apply(occ_sub,2,function(col){1/sum(col)})
Pr.R_r.cond.H_h_mat<-t(Pr.R_r.cond.H_h2*t(occ_sub))
Pr.R_r.cond.H_h_mat[1,]
Pr.R_r.cond.H_h_mat[,1]
sum(Pr.R_r.cond.H_h_mat[,1])
sum(Pr.R_r.cond.H_h_mat[,2])
sum(Pr.R_r.cond.H_h_mat[,3])
sum(Pr.R_r.cond.H_h_mat[,8])
sum(Pr.R_r.cond.H_h_mat[,10])
View(Pr.R_r.cond.H_h_mat)
Ur=apply(occ_sub,2,sum)
Ur
Ur=apply(occ_sub,1,sum)
ph_i=c(0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5)
Pr.R_r.cond.H_h_mat<-t(
Ur*((Pr.R_r.cond.H_h2*t(occ_sub))/Pr.R_r(occ_sub,ph_i))
)
Pr.R_r<-function(read_matrix,ph)
{
Pr.R_r.cond.H_h<-apply(read_df,2,function(col){1/sum(col)})
return(
apply(read_df,1,
function(row)
{sum(
Pr.R_r.cond.H_h*row*ph
)}
)
)
}
Pr.R_r.cond.H_h_mat<-t(
Ur*((Pr.R_r.cond.H_h2*t(occ_sub))/Pr.R_r(occ_sub,ph_i))
)
Pr.R_r<-function(read_matrix,ph)
{
Pr.R_r.cond.H_h<-apply(read_matrix,2,function(col){1/sum(col)})
return(
apply(read_df,1,
function(row)
{sum(
Pr.R_r.cond.H_h*row*ph
)}
)
)
}
Pr.R_r.cond.H_h_mat<-t(
Ur*((Pr.R_r.cond.H_h2*t(occ_sub))/Pr.R_r(occ_sub,ph_i))
)
Pr.R_r<-function(read_matrix,ph)
{
Pr.R_r.cond.H_h<-apply(read_matrix,2,function(col){1/sum(col)})
return(
apply(read_matrix,1,
function(row)
{sum(
Pr.R_r.cond.H_h*row*ph
)}
)
)
}
Pr.R_r.cond.H_h_mat<-t(
Ur*((Pr.R_r.cond.H_h2*t(occ_sub))/Pr.R_r(occ_sub,ph_i))
)
length(Ur)
((Pr.R_r.cond.H_h2*t(occ_sub))
)
Ur((Pr.R_r.cond.H_h2*t(occ_sub)))
Ur*((Pr.R_r.cond.H_h2*t(occ_sub)))
View(Ur*((Pr.R_r.cond.H_h2*t(occ_sub))))
a=Pr.R_r(occ_sub,ph_i)
a
warnings()
Pr.R_r<-function(read_matrix,ph)
{
Pr.R_r.cond.H_h<-apply(read_matrix,2,function(col){1/sum(col)})
return(
apply(read_matrix,1,
function(row)
{
browser()sum(
Pr.R_r.cond.H_h*row*ph
)}
)
)
}
Pr.R_r<-function(read_matrix,ph)
{
Pr.R_r.cond.H_h<-apply(read_matrix,2,function(col){1/sum(col)})
return(
apply(read_matrix,1,
function(row)
{
browser()
sum(
Pr.R_r.cond.H_h*row*ph
)}
)
)
}
a=Pr.R_r(occ_sub,ph_i)
row
ph
Pr.R_r.cond.H_h
Pr.R_r.cond.H_h
Pr.R_r.cond.H_h*row
Pr.R_r.cond.H_h*row*ph
length(ph)
ph_i=c(0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5)
Pr.R_r.cond.H_h_mat<-t(
Ur*((Pr.R_r.cond.H_h2*t(occ_sub))/Pr.R_r(occ_sub,ph_i))
)
Pr.R_r<-function(read_matrix,ph)
{
Pr.R_r.cond.H_h<-apply(read_matrix,2,function(col){1/sum(col)})
return(
apply(read_matrix,1,
function(row)
{
sum(
Pr.R_r.cond.H_h*row*ph
)}
)
)
}
Pr.R_r.cond.H_h_mat<-t(
Ur*((Pr.R_r.cond.H_h2*t(occ_sub))/Pr.R_r(occ_sub,ph_i))
)
View(Pr.R_r.cond.H_h_mat)
Pr.R_r.cond.H_h_mat<-t(
Ur*((ph_i*Pr.R_r.cond.H_h2*t(occ_sub))/Pr.R_r(occ_sub,ph_i))
)
Pr.R_r.cond.H_h_mat<- Ur*((ph_i*Pr.R_r.cond.H_h2*t(occ_sub))/Pr.R_r(occ_sub,ph_i))
Urh<-t(
Ur*((ph_i*Pr.R_r.cond.H_h2*t(occ_sub))/Pr.R_r(occ_sub,ph_i))
)
p_head<-apply(Urh,2,sum)/sum(Ur)
p_head
sum(p_head)
Pr.R_r<-function(read_matrix,ph)
{
Pr.R_r.cond.H_h<-apply(read_matrix,2,function(col){1/sum(col)})
return(
apply(read_matrix,1,
function(row)
{
sum(
Pr.R_r.cond.H_h*row*ph
)}
)
)
}
own.EM <- function(occurances)
{
ph=c(0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5)
Ur=apply(occ_sub,1,sum)
Pr.R_r.cond.H_h<-apply(occ_sub,2,function(col){1/sum(col)})
for (i in 1:100)
{
# Expectation Step
Urh<-t(
Ur*((ph_i*Pr.R_r.cond.H_h2*t(occ_sub))/Pr.R_r(occ_sub,ph))
)
#Maximisation Step
ph<-apply(Urh,2,sum)/sum(Ur)
}
}
own.EM <- function(occurances)
{
ph=c(0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5)
Ur=apply(occ_sub,1,sum)
Pr.R_r.cond.H_h<-apply(occ_sub,2,function(col){1/sum(col)})
for (i in 1:100)
{
# Expectation Step
Urh<-t(
Ur*((ph_i*Pr.R_r.cond.H_h2*t(occ_sub))/Pr.R_r(occ_sub,ph))
)
#Maximisation Step
ph<-apply(Urh,2,sum)/sum(Ur)
}
return(ph)
}
ph(occ)
own.EM(occ_sub)
own.EM(occ_sub)
own.EM <- function(occurances)
{
ph=c(0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5)
Ur=apply(occ_sub,1,sum)
Pr.R_r.cond.H_h<-apply(occ_sub,2,function(col){1/sum(col)})
for (i in 1:1000)
{
# Expectation Step
Urh<-t(
Ur*((ph_i*Pr.R_r.cond.H_h2*t(occ_sub))/Pr.R_r(occ_sub,ph))
)
#Maximisation Step
ph<-apply(Urh,2,sum)/sum(Ur)
}
return(ph)
}
own.EM(occ_sub)
own.EM <- function(occurances)
{
ph=rep(1/ncol(occurances),ncol(occurances))
Ur=apply(occ_sub,1,sum)
Pr.R_r.cond.H_h<-apply(occ_sub,2,function(col){1/sum(col)})
for (i in 1:1000)
{
# Expectation Step
Urh<-t(
Ur*((ph_i*Pr.R_r.cond.H_h2*t(occ_sub))/Pr.R_r(occ_sub,ph))
)
#Maximisation Step
ph<-apply(Urh,2,sum)/sum(Ur)
}
return(ph)
}
own.EM <- function(occurances)
{
ph=rep(1/ncol(occurances),ncol(occurances))
Ur=apply(occ_sub,1,sum)
Pr.R_r.cond.H_h<-apply(occ_sub,2,function(col){1/sum(col)})
for (i in 1:100)
{
# Expectation Step
Urh<-t(
Ur*((ph_i*Pr.R_r.cond.H_h2*t(occ_sub))/Pr.R_r(occ_sub,ph))
)
#Maximisation Step
ph<-apply(Urh,2,sum)/sum(Ur)
}
return(ph)
}
own.EM(occ_sub)
sum(own.EM(occ_sub))
own.EM <- function(occurances)
{
ph=rep(1/ncol(occurances),ncol(occurances))
Ur=apply(occ_sub,1,sum)
Pr.R_r.cond.H_h<-apply(occ_sub,2,function(col){1/sum(col)})
for (i in 1:1000)
{
# Expectation Step
Urh<-t(
Ur*((ph_i*Pr.R_r.cond.H_h2*t(occ_sub))/Pr.R_r(occ_sub,ph))
)
#Maximisation Step
ph<-apply(Urh,2,sum)/sum(Ur)
}
return(ph)
}
sum(own.EM(occ_sub))
own.EM <- function(occurances)
{
ph=rep(1/ncol(occurances),ncol(occurances))
Ur=apply(occ_sub,1,sum)
Pr.R_r.cond.H_h<-apply(occ_sub,2,function(col){1/sum(col)})
for (i in 1:1000)
{
# Expectation Step
Urh<-t(
Ur*((ph_i*Pr.R_r.cond.H_h2*t(occ_sub))/Pr.R_r(occ_sub,ph))
)
#Maximisation Step
ph<-apply(Urh,2,sum)/sum(Ur)
}
browser()
return(ph*Pr.R_r.cond.H_h)
}
sum(own.EM(occ_sub))
Pr.R_r.cond.H_h
own.EM <- function(occurances)
{
ph=rep(1/ncol(occurances),ncol(occurances))
Ur=apply(occ_sub,1,sum)
Pr.R_r.cond.H_h<-apply(occ_sub,2,function(col){1/sum(col)})
for (i in 1:100)
{
# Expectation Step
Urh<-t(
Ur*((ph_i*Pr.R_r.cond.H_h2*t(occ_sub))/Pr.R_r(occ_sub,ph))
)
#Maximisation Step
ph<-apply(Urh,2,sum)/sum(Ur)
}
browser()
return(ph*Pr.R_r.cond.H_h)
}
sum(own.EM(occ_sub))
Pr.R_r.cond.H_h
ph*Pr.R_r.cond.H_h*t(occurances)
log(ph*Pr.R_r.cond.H_h*t(occurances))
